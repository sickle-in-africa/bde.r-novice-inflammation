I"5f<p>Factors are used to represent categorical data. Factors can be ordered or
unordered and are an important class for statistical analysis and for plotting.</p>

<p>Factors are stored as integers, and have labels associated with these unique
integers. While factors look (and often behave) like character vectors, they are
actually integers under the hood, and you need to be careful when treating them
like strings.</p>

<p>Once created, factors can only contain a pre-defined set values, known as
<em>levels</em>. By default, R always sorts <em>levels</em> in alphabetical order. For
instance, if you have a factor with 2 levels:</p>

<blockquote class="callout">
  <h2 id="the-factor-command">The <code class="language-plaintext highlighter-rouge">factor()</code> Command</h2>

  <p>The <code class="language-plaintext highlighter-rouge">factor()</code> command is used to create and modify factors in R:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sex</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"male"</span><span class="p">,</span><span class="w"> </span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"male"</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>
</blockquote>

<p>R will assign <code class="language-plaintext highlighter-rouge">1</code> to the level <code class="language-plaintext highlighter-rouge">"female"</code> and <code class="language-plaintext highlighter-rouge">2</code> to the level <code class="language-plaintext highlighter-rouge">"male"</code> (because
<code class="language-plaintext highlighter-rouge">f</code> comes before <code class="language-plaintext highlighter-rouge">m</code>, even though the first element in this vector is
<code class="language-plaintext highlighter-rouge">"male"</code>). You can check this by using the function <code class="language-plaintext highlighter-rouge">levels()</code>, and check the
number of levels using <code class="language-plaintext highlighter-rouge">nlevels()</code>:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">levels</span><span class="p">(</span><span class="n">sex</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "female" "male"  
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nlevels</span><span class="p">(</span><span class="n">sex</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] 2
</code></pre></div></div>

<p>Sometimes, the order of the factors does not matter, other times you might want
to specify the order because it is meaningful (e.g., “low”, “medium”, “high”) or
it is required by particular type of analysis. Additionally, specifying the
order of the levels allows us to compare levels:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">food</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"low"</span><span class="p">,</span><span class="w"> </span><span class="s2">"high"</span><span class="p">,</span><span class="w"> </span><span class="s2">"medium"</span><span class="p">,</span><span class="w"> </span><span class="s2">"high"</span><span class="p">,</span><span class="w"> </span><span class="s2">"low"</span><span class="p">,</span><span class="w"> </span><span class="s2">"medium"</span><span class="p">,</span><span class="w"> </span><span class="s2">"high"</span><span class="p">))</span><span class="w">
</span><span class="n">levels</span><span class="p">(</span><span class="n">food</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "high"   "low"    "medium"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">food</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">food</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"low"</span><span class="p">,</span><span class="w"> </span><span class="s2">"medium"</span><span class="p">,</span><span class="w"> </span><span class="s2">"high"</span><span class="p">))</span><span class="w">
</span><span class="n">levels</span><span class="p">(</span><span class="n">food</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "low"    "medium" "high"  
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">min</span><span class="p">(</span><span class="n">food</span><span class="p">)</span><span class="w"> </span><span class="c1"># doesn't work</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext error highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Error in Summary.factor(structure(c(1L, 3L, 2L, 3L, 1L, 2L, 3L), .Label = c("low", : 'min' not meaningful for factors
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">food</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">food</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"low"</span><span class="p">,</span><span class="w"> </span><span class="s2">"medium"</span><span class="p">,</span><span class="w"> </span><span class="s2">"high"</span><span class="p">),</span><span class="w"> </span><span class="n">ordered</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">levels</span><span class="p">(</span><span class="n">food</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "low"    "medium" "high"  
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">min</span><span class="p">(</span><span class="n">food</span><span class="p">)</span><span class="w"> </span><span class="c1"># works!</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] low
Levels: low &lt; medium &lt; high
</code></pre></div></div>

<p>In R’s memory, these factors are represented by numbers (1, 2, 3). They are
better than using simple integer labels because factors are self describing:
<code class="language-plaintext highlighter-rouge">"low"</code>, <code class="language-plaintext highlighter-rouge">"medium"</code>, and <code class="language-plaintext highlighter-rouge">"high"</code>” is more descriptive than <code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">2</code>, <code class="language-plaintext highlighter-rouge">3</code>. Which
is low?  You wouldn’t be able to tell with just integer data. Factors have this
information built in. It is particularly helpful when there are many levels
(like the subjects in our example data set).</p>

<blockquote class="challenge">
  <h2 id="representing-data-in-r">Representing Data in R</h2>

  <p>You have a vector representing levels of exercise undertaken by 5 subjects</p>

  <p><strong>“l”, “n”, “n”, “i”, “l”</strong> ; n=none, l=light, i=intense</p>

  <p>What is the best way to represent this in R?</p>

  <p>a) exercise &lt;- c(“l”, “n”, “n”, “i”, “l”)</p>

  <p>b) exercise &lt;- factor(c(“l”, “n”, “n”, “i”, “l”), ordered = TRUE)</p>

  <p>c) exercise &lt; -factor(c(“l”, “n”, “n”, “i”, “l”), levels = c(“n”, “l”, “i”), ordered = FALSE)</p>

  <p>d) exercise &lt;- factor(c(“l”, “n”, “n”, “i”, “l”), levels = c(“n”, “l”, “i”), ordered = TRUE)</p>

  <blockquote class="solution">
    <h2 id="solution">Solution</h2>
    <p>Correct solution is <strong>d)</strong></p>
    <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">exercise</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"l"</span><span class="p">,</span><span class="w"> </span><span class="s2">"n"</span><span class="p">,</span><span class="w"> </span><span class="s2">"n"</span><span class="p">,</span><span class="w"> </span><span class="s2">"i"</span><span class="p">,</span><span class="w"> </span><span class="s2">"l"</span><span class="p">),</span><span class="w"> </span><span class="n">levels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"n"</span><span class="p">,</span><span class="w"> </span><span class="s2">"l"</span><span class="p">,</span><span class="w"> </span><span class="s2">"i"</span><span class="p">),</span><span class="w"> </span><span class="n">ordered</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div>    </div>
    <p>We only expect three cathegories (“n”, “l”, “i”).
We can order these from least intense to most intense, so let’s use <code class="language-plaintext highlighter-rouge">ordered</code>.</p>
  </blockquote>
</blockquote>

<h3 id="converting-factors">Converting Factors</h3>

<p>Converting from a factor to a number can cause problems:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">f</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">3.4</span><span class="p">,</span><span class="w"> </span><span class="m">1.2</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">))</span><span class="w">
</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">f</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] 2 1 3
</code></pre></div></div>

<p>This does not behave as expected (and there is no warning).</p>

<p>The recommended way is to use the integer vector to index the factor levels:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">levels</span><span class="p">(</span><span class="n">f</span><span class="p">)[</span><span class="n">f</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1] "3.4" "1.2" "5"  
</code></pre></div></div>

<p>This returns a character vector, the <code class="language-plaintext highlighter-rouge">as.numeric()</code> function is still required to convert the values to the proper type (numeric).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">f</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">levels</span><span class="p">(</span><span class="n">f</span><span class="p">)[</span><span class="n">f</span><span class="p">]</span><span class="w">
</span><span class="n">f</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">f</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h3 id="using-factors">Using Factors</h3>

<p>Lets load our example data to see the use of factors:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'data/sample.csv'</span><span class="p">,</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<blockquote class="callout">
  <h2 id="default-behavior">Default Behavior</h2>

  <p><code class="language-plaintext highlighter-rouge">stringsAsFactors = TRUE</code> is the default behavior for R.
We could leave this argument out.
It is included here for clarity.</p>
</blockquote>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'data.frame':	100 obs. of  9 variables:
 $ ID           : Factor w/ 100 levels "Sub001","Sub002",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ Gender       : Factor w/ 4 levels "f","F","m","M": 3 3 3 1 3 4 1 3 3 1 ...
 $ Group        : Factor w/ 3 levels "Control","Treatment1",..: 1 3 3 2 2 3 1 3 3 1 ...
 $ BloodPressure: int  132 139 130 105 125 112 173 108 131 129 ...
 $ Age          : num  16 17.2 19.5 15.7 19.9 14.3 17.7 19.8 19.4 18.8 ...
 $ Aneurisms_q1 : int  114 148 196 199 188 260 135 216 117 188 ...
 $ Aneurisms_q2 : int  140 209 251 140 120 266 98 238 215 144 ...
 $ Aneurisms_q3 : int  202 248 122 233 222 320 154 279 181 192 ...
 $ Aneurisms_q4 : int  237 248 177 220 228 294 245 251 272 185 ...
</code></pre></div></div>

<p>Notice the first 3 columns have been converted to factors. These values were text in the data file so R automatically interpreted them as categorical variables.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary</span><span class="p">(</span><span class="n">dat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       ID     Gender        Group    BloodPressure        Age       
 Sub001 : 1   f:35   Control   :30   Min.   : 62.0   Min.   :12.10  
 Sub002 : 1   F: 4   Treatment1:35   1st Qu.:107.5   1st Qu.:14.78  
 Sub003 : 1   m:46   Treatment2:35   Median :117.5   Median :16.65  
 Sub004 : 1   M:15                   Mean   :118.6   Mean   :16.42  
 Sub005 : 1                          3rd Qu.:133.0   3rd Qu.:18.30  
 Sub006 : 1                          Max.   :173.0   Max.   :20.00  
 (Other):94                                                         
  Aneurisms_q1    Aneurisms_q2    Aneurisms_q3    Aneurisms_q4  
 Min.   : 65.0   Min.   : 80.0   Min.   :105.0   Min.   :116.0  
 1st Qu.:118.0   1st Qu.:131.5   1st Qu.:182.5   1st Qu.:186.8  
 Median :158.0   Median :162.5   Median :217.0   Median :219.0  
 Mean   :158.8   Mean   :168.0   Mean   :219.8   Mean   :217.9  
 3rd Qu.:188.0   3rd Qu.:196.8   3rd Qu.:248.2   3rd Qu.:244.2  
 Max.   :260.0   Max.   :283.0   Max.   :323.0   Max.   :315.0  
                                                                
</code></pre></div></div>

<p>Notice the <code class="language-plaintext highlighter-rouge">summary()</code> function handles factors differently to numbers (and strings), the occurrence counts for each value is often more useful information.</p>

<blockquote class="callout">
  <h2 id="the-summary-function">The <code class="language-plaintext highlighter-rouge">summary()</code> Function</h2>

  <p>The <code class="language-plaintext highlighter-rouge">summary()</code> function is a great way of spotting errors in your data (look at the <em>dat$Gender</em> column).
It’s also a great way for spotting missing data.</p>
</blockquote>

<blockquote class="challenge">
  <h2 id="reordering-factors">Reordering Factors</h2>

  <p>The function <code class="language-plaintext highlighter-rouge">table()</code> tabulates observations and can be used to create bar plots quickly. For instance:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">table</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Group</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="language-plaintext output highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
   Control Treatment1 Treatment2 
        30         35         35 
</code></pre></div>  </div>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">barplot</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Group</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="../fig/rmd-12-supp-factors-reordering-factors-1.png" title="plot of chunk reordering-factors" alt="plot of chunk reordering-factors" width="612" style="display: block; margin: auto;" />
Use the <code class="language-plaintext highlighter-rouge">factor()</code> command to modify the column dat$Group so that the <em>control</em> group is plotted last.</p>
  <blockquote class="solution">
    <h2 id="solution-1">Solution</h2>

    <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dat</span><span class="o">$</span><span class="n">Group</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Group</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Treatment1"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Treatment2"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Control"</span><span class="p">))</span><span class="w">
</span><span class="n">barplot</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Group</span><span class="p">))</span><span class="w">
</span></code></pre></div>    </div>

    <p><img src="../fig/rmd-12-supp-factors-reordering-factors-2-1.png" title="plot of chunk reordering-factors-2" alt="plot of chunk reordering-factors-2" width="612" style="display: block; margin: auto;" /></p>
  </blockquote>
</blockquote>

<h3 id="removing-levels-from-a-factor">Removing Levels from a Factor</h3>

<p>Some of the Gender values in our dataset have been coded incorrectly.
Let’s remove levels from this factor.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">barplot</span><span class="p">(</span><span class="n">table</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p><img src="../fig/rmd-12-supp-factors-gender-counts-1.png" title="plot of chunk gender-counts" alt="plot of chunk gender-counts" width="612" style="display: block; margin: auto;" /></p>

<p>Values should have been recorded as lowercase ‘m’ and ‘f’. We should correct this.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'M'</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'m'</span><span class="w">
</span></code></pre></div></div>

<blockquote class="challenge">
  <h2 id="updating-factors">Updating Factors</h2>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">BloodPressure</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="../fig/rmd-12-supp-factors-updating-factors-1.png" title="plot of chunk updating-factors" alt="plot of chunk updating-factors" width="612" style="display: block; margin: auto;" /></p>

  <p>Why does this plot show 4 levels?</p>

  <p><em>Hint</em> how many levels does dat$Gender have?</p>
  <blockquote class="solution">
    <h2 id="solution-2">Solution</h2>
    <p><code class="language-plaintext highlighter-rouge">dat$Gender</code> has 4 levels, so the plot shows 4 levels.</p>
  </blockquote>
</blockquote>

<p>We need to tell R that “M” is no longer a valid value for this column.
We use the <code class="language-plaintext highlighter-rouge">droplevels()</code> function to remove extra levels.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">droplevels</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">BloodPressure</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="../fig/rmd-12-supp-factors-dropping-levels-1.png" title="plot of chunk dropping-levels" alt="plot of chunk dropping-levels" width="612" style="display: block; margin: auto;" /></p>

<blockquote class="callout">
  <h2 id="adjusting-factor-levels">Adjusting Factor Levels</h2>

  <p>Adjusting the <code class="language-plaintext highlighter-rouge">levels()</code> of a factor provides a useful shortcut for reassigning values in this case.</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">levels</span><span class="p">(</span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">)[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'f'</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">Gender</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dat</span><span class="o">$</span><span class="n">BloodPressure</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="../fig/rmd-12-supp-factors-adjusting-levels-1.png" title="plot of chunk adjusting-levels" alt="plot of chunk adjusting-levels" width="612" style="display: block; margin: auto;" /></p>
</blockquote>

:ET